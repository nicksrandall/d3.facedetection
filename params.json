{"name":"D3.facedetection","tagline":"A d3 plugin to detect faces on images (HTML and SVG), videos and canvases.","body":"# d3.js Face Detection Plugin\r\n\r\nA d3.js plugin to detect faces on images (both HTML and SVG), videos and canvases to get their coordinates.\r\n\r\n**Importante note:** This plugin uses an algorithm by [Liu Liu](http://liuliu.me/).\r\n\r\nThis is a fork of the very popular [jquery.facedetection](http://facedetection.jaysalvat.com) by [jaysalvat](https://github.com/jaysalvat)\r\n\r\n## Get started\r\n\r\nDownload the plugin with the method of your choice.\r\n\r\n- Download the [last release](https://github.com/nicksrandall/d3.facedetection/zipball/master) manually\r\n- Or install it with [Bower](http://bower.io/).\r\n\r\n```\r\nbower install d3.facedetection\r\n```\r\n\r\n- Or install it with [NPM](https://www.npmjs.org/package/d3.facedetection).\r\n\r\n```\r\nnpm install d3.facedetection\r\n```\r\n\r\nInclude [d3](https://github.com/mbostock/d3/releases/download/v3.5.3/d3.zip) and the plugin.\r\n\r\n```html\r\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/d3/3.5.3/d3.min.js\"></script> \r\n<script src=\"path/to/dist/d3.facedetection.min.js\"></script> \r\n```\r\n\r\nSet a picture with some faces in your HTML (or SVG) page.\r\n\r\n```html\r\n<svg height=\"350px\" width=\"620px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink= \"http://www.w3.org/1999/xlink\">\r\n  <image id=\"picture\" xlink:href=\"picture.jpg\" x=\"0\" y=\"0\" width=\"620px\" height=\"350px\"></image>\r\n</svg>\r\n```\r\nApply the plugin to this image and get the face coordinates.\r\n\r\n```html\r\n<script>\r\n    d3.select('#picture').faceDetection({\r\n        complete: function (faces) {\r\n            console.log(faces);\r\n        }\r\n    });\r\n</script> \r\n```\r\n\r\n## Results\r\n\r\nReturns an array of found faces object:\r\n\r\n- **x** — Y coord of the face in the picture\r\n- **y** — Y coord of the face in the picture\r\n- **width** — Width of the face\r\n- **height** — Height of the face\r\n- **positionX** — X position relative to the document\r\n- **positionY** — Y position relative to the document\r\n- **offsetX** — X position relative to the offset parent\r\n- **offsetY** — Y position relative to the offset parent\r\n- **scaleX** — Ratio between original image width and displayed width\r\n- **scaleY** — Ratio between original image height and displayed height\r\n- **confidence** — Level of confidence\r\n\r\n## Settings\r\n- **interval** — Interval (default 4)\r\n- **minNeighbors** — Minimum neighbors threshold which sets the cutoff level for discarding rectangle groups as face (default 1)\r\n- **confidence** — Minimum confidence (default null)\r\n- **async** — Async mode if Worker available (default false). The async mode uses Workers and needs the script to be on the same domain.\r\n- **grayscale** — Convert to grayscale before processing (default true)\r\n- **complete** — Callback function trigged after the detection is completed\r\n\r\n```js\r\ncomplete: function (faces) {\r\n    // ...\r\n}\r\n```\r\n\r\n- **error** — Callback function trigged on errors\r\n\r\n```js\r\nerror: function (code, message) {\r\n    // ...\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}